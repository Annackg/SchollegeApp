
import Firebase
import FirebaseFirestoreSwift
import SwiftUI
struct LoginView: View {
    @State private var email = ""
    @State private var password = ""
    
    var body: some View {
        NavigationStack {
            VStack {
                // Logo
                Image(systemName: "graduationcap.fill")
                    .resizable()
                    .scaledToFill()
                    .foregroundColor(.black)
                    .frame(width: 100, height: 120)
                    .padding(.vertical, 32)
                
                // form fields
                VStack(spacing: 24) {
                    InputView(text: $email,
                              title: "Email Address",
                              placeholder: "name@example.com")
                    .autocapitalization(.none)
                    
                    
                    
                    InputView(text: $password,
                              title: "Password",
                              placeholder: "Enter your password",
                              isSecureField: true)
                }
                .padding(.horizontal)
                .padding(.top, 12)
                
                // Log In
                Button {
                    // MARK: fix this! Trying to get the value of isactive from database so user can't log in if account has been deleted
                 //  var isactive = Firestore.firestore().collection("users").getData("isactive") else { return }
                 //   if isactive {
                                Task {
                                    try await AuthService.shared.signIn(withEmail: email, password: password)
                                }
                        //    } else { return }
                } label: {
                    HStack
                    {
                        Text("SIGN IN")
                            .font(.title3)
                            .fontWeight(.semibold)
                        Image(systemName: "arrow.right")
                            .imageScale(.medium)
                        
                    }
                    .foregroundColor(.white)
                    .frame(width: UIScreen.main.bounds.width - 32, height: 48 )
                    
                }
                .background(Color(.systemBlue))
                .disabled(!formIsValid)
                .opacity(formIsValid ? 1.0 : 0.5)
                .cornerRadius(10)
                .padding(.top, 24)
                .padding(.bottom, 6)
                
                
                
                // Sign Up
                NavigationLink {
                    RegistrationView()
                        .navigationBarBackButtonHidden()
                } label: {
                    HStack(spacing: 3) {
                        Text("Don't have an account?")
                            .font(.callout)
                            .fontWeight(.light)
                            .foregroundColor(Color.black)
                        Text("Sign Up")
                            .fontWeight(.bold)
                        
                    }
                    .font(.system(size: 15))
                }
                
                Spacer()
                
                HStack {
                  Image(systemName: "building.columns")
                        .resizable()
                        .scaledToFill()
                        .foregroundColor(.black)
                        .frame(width: 30, height: 30)
                        .padding(.trailing, 5)
                    Text("Schollege")
                        .font(.largeTitle)
                        .fontWeight(.bold)
                        .foregroundColor(Color.yellow)
                }
                .frame(width: UIScreen.main.bounds.width - 32, height: 48 )
            }
  }
 }
}
// MARK: AuthenticationFormProtocol
// determines what the user needs (validation) to be able to sign in. Right now password only needs 6 letters (add more later?)
extension LoginView: AuthenticationFormProtocol {
    var formIsValid: Bool {
        return !email.isEmpty && email.contains("@") && !password.isEmpty && password.count > 5
    }
}
struct LoginView_Previews: PreviewProvider {
    static var previews: some View {
       LoginView()
    }
}
